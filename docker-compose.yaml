networks:
  nest:
    name: nest
    driver: bridge

volumes:
  mongo-data:

services:
  detective_office:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app-server
    environment:
      SERVER_HOST: ${SERVER_HOST}
      SERVER_PORT: ${SERVER_PORT}
      SOCKET_PORT: ${SOCKET_PORT}
      CLIENT_HOST: ${CLIENT_HOST}
      CLIENT_PORT: ${CLIENT_PORT}
      POSTGRES_HOST: 'postgres_db'
      POSTGRES_PORT: 5432
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_DB: 'detective'
      POSTGRES_SYNC: true
      REDIS_HOST: 'redis'
      REDIS_PORT: 6379
      MONGO_HOST: 'mongodb://mongo/detective-office'
      MONGO_PORT: 27017
      GF_USER: ${GF_USER}
      GF_PASSWORD: ${GF_PASSWORD}
      AWS_S3_ACCESS_KEY: ${AWS_S3_ACCESS_KEY}
      AWS_S3_SECRET_KEY: ${AWS_S3_SECRET_KEY}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      BUSINESS_REGISTRATION_SERVICEKEY: ${BUSINESS_REGISTRATION_SERVICEKEY}
      ACCESS_SECRET: ${ACCESS_SECRET}
      ADDRESS_SECRET: ${ADDRESS_SECRET}
    ports:
      - '${SERVER_PORT}:${SERVER_PORT}'
      - '${SOCKET_PORT}:${SOCKET_PORT}'
    depends_on:
      - postgres_db
      - redis
      - mongo
    # restart: always
    volumes:
      - ./public:/app/public
    networks:
      - nest

  postgres_db:
    container_name: postgres_db
    image: bitnami/postgresql
    restart: always
    ports:
      - '5432:5432'
    environment:
      POSTGRESQL_USER: 'postgres'
      POSTGRESQL_PASSWORD: 'postgres'
      POSTGRESQL_DATABASE: 'detective'
    volumes:
      - ./data/postgres:/bitnami/postgresql
    networks:
      - nest

  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - '${MONGO_PORT}:${MONGO_PORT}' # 호스트와 컨테이너 간 포트 매핑
    environment:
      MONGO_INITDB_ROOT_USERNAME: root # 초기 관리자 사용자 이름
      MONGO_INITDB_ROOT_PASSWORD: example # 초기 관리자 비밀번호
    volumes:
      - ./data/mongo:/data/db # 데이터를 호스트의 볼륨에 저장
    networks:
      - nest

  redis:
    image: 'bitnami/redis:latest'
    container_name: redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - '${REDIS_PORT}:${REDIS_PORT}'
    volumes:
      - ./data/redis:/data/redis
      - ./redis.conf:/opt/bitnami/redis/etc/redis.conf
    command: >
      sh -c "chown -R 1001:1001 /data/redis && chmod -R 775 /data/redis && redis-server /opt/bitnami/redis/etc/redis.conf"
    networks:
      - nest

  promtail:
    container_name: promtail
    image: grafana/promtail:latest
    command: '--config.file=/etc/promtail/promtail-config.yaml'
    volumes:
      - ./config/promtail-config.yaml:/etc/promtail/promtail-config.yaml
      - ./logs:/logs
      - ./logs/postgres-log:/var/log/postgresql
    restart: always
    depends_on:
      - prometheus
    networks:
      - nest

  loki:
    container_name: loki
    image: grafana/loki:latest
    user: root
    command: '--config.file=/etc/loki/loki-config.yaml'
    volumes:
      - ./config/loki-config.yaml:/etc/loki/loki-config.yaml
      - ./loki:/loki
    ports:
      - '3100:3100'
    restart: always
    networks:
      - nest

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    ports:
      - '3002:3000'
    volumes:
      - ./data/grafana:/var/lib/grafana
    restart: always
    environment:
      GF_SECURITY_ADMIN_USER: ${GF_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GF_PASSWORD}
    networks:
      - nest

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
    volumes:
      - ./config/prometheus-config.yaml:/etc/prometheus/prometheus.yaml
      - ./data/prometheus:/prometheus
    ports:
      - '9090:9090'
    restart: always
    networks:
      - nest

  node_exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
    networks:
      - nest

  postgres_exporter:
    image: bitnami/postgres-exporter:latest
    container_name: postgres-exporter
    environment:
      DATA_SOURCE_NAME: 'postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB}?sslmode=disable'
    ports:
      - '9187:9187'
    networks:
      - nest
